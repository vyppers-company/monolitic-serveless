service: mono-sls
useDotenv: true

plugins:
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: sa-east-1
  timeout: 200
  logs:
    restApi: True
  apiGateway:
    shouldStartNameWithService: true
    binaryMediaTypes:
      - '*/*'
  ecr:
    images:
      monolitic-vyppers-serverless:
        path: .

package:
  individually: true 

functions:
  create-account:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: POST
          path: 'register/v1/user'
  auth-common:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200
    events:
      - http:
          method: POST
          path: 'auth/v1/common'
  auth-google:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: GET
          path: 'auth/v1/google'
      - http:
          method: GET
          path: 'auth/v1/google/redirect'
  auth-facebook:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: GET
          path: 'auth/v1/facebook'
      - http:
          method: GET
          path: 'auth/v1/facebook/redirect'
  recovery-account:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: POST
          path: 'recovery/v1/generate-code'
      - http:
          method: POST
          path: 'recovery/v1/validate-code'
      - http:
          method: POST
          path: 'recovery/v1/change-password'
  user:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: GET
          path: 'user/v1/profile'
      - http:
          method: GET
          path: 'user/v1/validate/profile'
  content-managment:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: POST
          path: 'content/v1/create'
      - http:
          method: DELETE
          path: 'content/v1/{contentId}/delete'
      - http:
          method: PUT
          path: 'content/v1/{contentId}/edit'
      - http:
          method: GET
          path: 'content/v1/all'
      - http:
          method: GET
          path: 'content/v1/unique/{contentId}/{vypperId}'
      - http:
          method: GET
          path: 'content/v1/profile/picture'
  swagger:
    image:
      name: monolitic-vyppers-serverless
      command:
        - dist/lambda.handler
      entryPoint:
        - '/lambda-entrypoint.sh'
    timeout: 200   
    events:
      - http:
          method: GET
          path: 'swagger'
      - http:
          method: GET
          path: 'swagger/swagger-ui.css'
      - http:
          method: GET
          path: 'swagger/swagger-ui-bundle.js'
      - http:
          method: GET
          path: 'swagger/swagger-ui-standalone-preset.js'
      - http:
          method: GET
          path: 'swagger/swagger-ui-init.js'
      - http:
          method: GET
          path: 'swagger/swagger-ui.css.map'